@name Titus's KC92 Stand Base
@inputs E:entity Notch Reverser Selector Bell Sand AutomaticBrake
@outputs
@persist RevC SelectorC SelectorI BellC SandC AutoBrakeC
@trigger 
@model

#E:entity
#E = entity()

if(dupefinished() | duped()){ reset() }
if(first()){ 


#---- Reverser

    A = 1
    holoCreate(A)
    holoParent(A,E)
    holoModel(A, "models/rika/part/stands/lever_kc92_6sl.mdl")
    holoColor(A,vec(255))
    holoScale(A,vec(1))
    holoPos(A,E:toWorld(vec(-2.4,-10.7,33.8)))
    holoAng(A,E:toWorld(ang(0,0,0)))
    holoBodygroup(A,1,1)
    
#---- Automatic Brake

    A = 2
    holoCreate(A)
    holoParent(A,E)
    holoModel(A, "models/rika/part/stands/lever_kc92_6sl.mdl")
    holoColor(A,vec(255))
    holoScale(A,vec(1))
    holoPos(A,E:toWorld(vec(-0.9,10.45,39.4)))
    holoAng(A,E:toWorld(ang(0,-68,0)))
    holoBodygroup(A,1,3)
    
#---- Locomotive Brake

    A = 3
    holoCreate(A)
    holoParent(A,E)
    holoModel(A, "models/rika/part/stands/lever_kc92_6sl.mdl")
    holoColor(A,vec(255))
    holoScale(A,vec(1))
    holoPos(A,E:toWorld(vec(-7.65,10.525,32.745)))
    holoAng(A,E:toWorld(ang(0,-50,0)))
    holoBodygroup(A,1,4)
    
    #Notch(s), -50  50
    #Bail -5 -50 0
    
#---- Bell Valve

    A = 4
    holoCreate(A)
    holoParent(A,E)
    holoModel(A, "models/rika/part/stands/lever_kc92_6sl.mdl")
    holoColor(A,vec(255))
    holoScale(A,vec(1))
    holoPos(A,E:toWorld(vec(-3.8,6.1,35.155)))
    holoAng(A,E:toWorld(ang(0,0,0)))
    holoBodygroup(A,1,5)
    
#---- Sand Valve

    A = 5
    holoCreate(A)
    holoParent(A,E)
    holoModel(A, "models/rika/part/stands/lever_kc92_6sl.mdl")
    holoColor(A,vec(255))
    holoScale(A,vec(1))
    holoPos(A,E:toWorld(vec(-3.8,14.78,35.155)))
    holoAng(A,E:toWorld(ang(0,0,0)))
    holoBodygroup(A,1,5)
    
#---- Throttle

    A = 6
    holoCreate(A)
    holoParent(A,E)
    holoModel(A, "models/rika/part/stands/lever_kc92_6sl.mdl")
    holoColor(A,vec(255))
    holoScale(A,vec(1))
    holoPos(A,E:toWorld(vec(-1.7,-10.7,40)))
    holoAng(A,E:toWorld(ang(0,34,0)))
    holoBodygroup(A,1,0)
    
#---- Selector

    A = 7
    holoCreate(A)
    holoParent(A,E)
    holoModel(A, "models/rika/part/stands/lever_kc92_6sl.mdl")
    holoColor(A,vec(255))
    holoScale(A,vec(1))
    holoPos(A,E:toWorld(vec(0,-6,40)))
    holoAng(A,E:toWorld(ang(0,-90,0)))
    holoBodygroup(A,1,2)
    
#---- Notch Indicator

    A = 8
    holoCreate(A)
    holoParent(A,E)
    holoModel(A, "models/rika/part/stands/indicator_kc92.mdl")
    holoColor(A,vec(255))
    holoScale(A,vec(1))
    holoPos(A,E:toWorld(vec(-0.32,-7.92,41.89)))
    holoAng(A,E:toWorld(ang(0,67.5,0))) #11 dec
    holoClipEnabled(A,1,1)
    holoClip(A,1,vec(0,0,0),vec(-1,0,0),0)
    
#---- Selector Indicator

    A = 9
    holoCreate(A)
    holoParent(A,E)
    holoModel(A, "models/rika/part/stands/indicator_kc92.mdl")
    holoColor(A,vec(255))
    holoScale(A,vec(1))
    holoPos(A,E:toWorld(vec(0.1,-5.9,41.89)))
    holoAng(A,E:toWorld(ang(0,140,0))) #11 dec
    holoClipEnabled(A,1,1)
    holoClip(A,1,vec(0,0,0),vec(1,0,0),0)
    
# holo code by titus, if you remove this magnum i will SMASH yoU.
  
}

holoAng(6,E:toWorld(ang(0,34-(Notch*11.25),0)))
holoAng(8,E:toWorld(ang(0,67.5-(Notch*11.25),0)))

switch(Reverser){ #reverser angle logic
  case 0,
    RevC = 0 
    break
  case 1,
    RevC = 21  
    break
 case -1,
    RevC = -18
    break
}

switch(Sand){ #sand angle logic
  case 0,
    SandC = 0 
    break
  case 1,
    SandC = 55  
    break
 case -1,
    SandC = -55
    break
}

switch(Bell){ #bell angle logic
  case 0,
    BellC = 0 
    break
  case 1,
    BellC = 55  
    break
 case -1,
    BellC = -55
    break
}

switch(AutomaticBrake){ #automatic brake angle notch logic [-68,-48,-27,0,22,40], dev positions, should be edited
  case 0,
    AutoBrakeC = -68 
    break
  case 1,
    AutoBrakeC = -48  
    break
  case 2,
    AutoBrakeC = -27
    break
  case 3,
    AutoBrakeC = 0  
    break
  case 4,
    AutoBrakeC = 22  
    break
  case 6,
    AutoBrakeC = 40  
    break
}

holoAng(1,E:toWorld(ang(0,RevC,0)))
holoAng(4,E:toWorld(ang(0,BellC,0)))
holoAng(5,E:toWorld(ang(0,SandC,0)))
holoAng(2,E:toWorld(ang(0,AutoBrakeC,0)))

SelectorC = (Selector*10)
SelectorI = (Selector*11.25)

holoAng(7,E:toWorld(ang(0,-70-(SelectorC),0)))
holoAng(9,E:toWorld(ang(0,140-(SelectorI),0)))
